version: "3.9"

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"

  vision_api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: vision_api
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SERVER_PORT=8080
    depends_on:
      - kafka
    ports:
      - "8080:8080"

  vision_worker:
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    container_name: vision_worker
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - API_BASE_URL=http://vision_api:8080/api
      - LOG_PATH=/data/users-processed.log
    volumes:
      - worker_data:/data
    depends_on:
      - kafka
      - vision_api

volumes:
  worker_data:
